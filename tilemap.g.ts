// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 . . 2 2 2 2 2 2 2 2 2 2 
2 2 . . . . . . . . . . . . 2 2 
2 2 . . . . 2 . . . . 2 2 2 2 2 
2 . . . 2 2 . 2 2 2 . . 2 2 . . 
2 . 2 2 2 . . 2 2 2 2 . . 2 2 . 
2 2 2 2 2 . . . . 2 2 . . . 2 . 
2 2 2 2 . . 2 2 . 2 2 . 2 . 2 . 
2 2 2 2 . . 2 2 . 2 . . 2 2 2 . 
2 2 . . . 2 2 2 . 2 . 2 2 2 2 2 
2 2 . 2 . 2 2 2 . . . . . . . 2 
2 2 2 2 . . . 2 2 2 2 2 2 2 . 2 
2 . 2 . . 2 . . . 2 . . . 2 . 2 
2 . 2 . 2 2 2 2 2 . . . . 2 . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 2 
. . . . . . . . . . . . . . . 2 
`, [myTiles.transparency16,sprites.castle.tilePath2,sprites.castle.tilePath5], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
2 2 . . . 2 2 2 2 2 2 . . . 2 2 
2 2 2 2 . . . . . 2 . . 2 2 2 2 
2 2 2 2 2 2 . . . . . 2 . . . 2 
2 2 . . . 2 2 2 . . . . . 2 . . 
2 . . . . . . . . . . . . 2 2 . 
2 . . . . . . . . . . . . . 2 2 
2 . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . 2 
. . . 2 2 2 2 . . . . 2 2 2 2 2 
. . . 2 2 2 2 . . . . . . . 2 2 
. . . 2 2 . . . . . . . 2 2 . . 
. . . . 2 2 . . 2 2 2 2 2 . . . 
. . . . . 2 2 . 2 2 2 2 . . 2 . 
. . . . . . 2 2 2 2 2 2 . 2 2 2 
. . . . . . 2 2 . 2 2 2 2 2 2 2 
. . . . . . 2 2 . . . . . 2 2 2 
`, [myTiles.transparency16,sprites.castle.tilePath5,myTiles.tile1,sprites.builtin.forestTiles0], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 . 2 2 2 . . . . 
2 . . . . 2 2 2 2 . 2 2 2 . . . 
2 2 . . . . . 2 2 . . . 2 2 2 2 
2 2 2 . . 2 . . . . . . . . . 2 
2 2 2 . 2 2 2 2 . . . 2 2 . . 2 
2 2 2 . 2 2 2 2 2 2 2 . . . . 2 
2 2 . . . . . . . . . . . 2 . . 
. . . 2 2 2 2 . . . . . 2 2 2 2 
. . 2 2 2 . . . 2 2 . 2 2 . . 2 
2 2 2 2 . . 2 . 2 2 . . . . 2 2 
2 2 . . . . . . . . . . . . . 2 
2 2 . 2 2 2 . . . . . 2 2 2 2 2 
2 2 2 . . . . 2 . 2 . 2 2 2 2 2 
2 . . . 2 2 . 2 2 2 . . 2 2 2 2 
. . . . 2 2 . . 2 2 2 . . 2 2 2 
2 . . . 2 2 2 2 . . . 2 . 2 2 2 
`, [myTiles.transparency16,sprites.castle.tileDarkGrass3,sprites.builtin.forestTiles0,myTiles.tile1,myTiles.tile2], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex`1000100001010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tileDarkGrass3,sprites.castle.tileDarkGrass1], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 . . . 2 2 2 2 . . . 2 
2 2 2 2 2 2 2 . . . . . . 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 . . . 2 2 
2 2 . . . . . . . 2 2 2 2 . . . 
2 . . . . . . . . . 2 2 2 . . . 
2 . 2 . . . 2 2 . . . 2 . . 2 . 
2 . . . . . 2 2 2 2 . 2 . 2 2 . 
. . . . . . . . 2 2 . . . 2 2 . 
. 2 2 2 2 2 2 . 2 2 . . . 2 2 . 
. 2 2 2 2 2 2 . 2 2 . . . 2 2 . 
. 2 2 . 2 2 2 . . . . 2 . 2 2 . 
. 2 2 . . 2 2 2 2 2 2 2 . 2 2 2 
. 2 2 2 . . . . 2 2 2 2 2 . 2 2 
. 2 2 2 2 2 2 . . . . . . . 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 . 2 2 
`, [myTiles.transparency16,sprites.castle.tileDarkGrass1,sprites.castle.tileDarkGrass2], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
2 2 2 2 . . . 2 2 2 . 2 2 2 2 2 
2 2 2 2 2 . 2 2 2 2 . 2 2 2 2 . 
2 2 . . . . . . . . . . . . . . 
2 2 . 2 . 2 . . . . . 2 2 . . . 
. . . . . 2 2 2 2 . 2 2 2 . 2 2 
2 2 . . . . . . . . . . . . . . 
2 2 . . 2 . . . 2 . 2 2 2 . 2 2 
2 2 . . 2 . . 2 . . . . 2 . . . 
2 2 . . 2 . . . . 2 2 . 2 . 2 2 
2 2 . . . . 2 . . . 2 . 2 . 2 2 
. . . . 2 . 2 2 2 . . . 2 . . . 
2 2 . 2 2 . 2 2 2 . 2 . 2 . 2 2 
. . . . . . . . . . 2 . 2 . 2 2 
. 2 2 2 . 2 2 . . . . . . . 2 2 
. 2 2 2 . 2 2 2 2 . 2 2 . 2 2 2 
. 2 2 2 . . . . . . 2 2 . 2 2 2 
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.castle.tileDarkGrass2], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex``, img`
2 2 . 2 2 2 . . . . . . . 2 . 2 
2 2 . 2 2 . 2 . . 2 2 2 2 2 . 2 
2 2 . 2 2 . 2 2 . . . . 2 2 . 2 
. 2 . 2 2 . 2 2 . . 2 . 2 2 . 2 
. 2 . 2 2 . . 2 . . 2 . 2 2 . 2 
. 2 . 2 . 2 . 2 . . 2 . 2 2 . 2 
. 2 . 2 . 2 . 2 . . 2 . 2 2 . 2 
. 2 . 2 . 2 . . . . 2 . 2 2 . 2 
. 2 . . . 2 . . 2 . 2 . 2 2 . 2 
. 2 . 2 . 2 . . 2 . 2 . . . . 2 
. 2 . 2 . 2 . . 2 . 2 . . . 2 2 
. 2 . 2 . 2 . . 2 . 2 . . . 2 2 
. . . 2 . 2 . . 2 . 2 . . . 2 2 
. . . 2 . . . . . . . . 2 . 2 2 
. 2 . 2 . 2 2 . 2 . 2 . 2 . . . 
. 2 . 2 . 2 2 . 2 . 2 . 2 . 2 2 
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.builtin.oceanDepths3], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.builtin.oceanDepths4,sprites.builtin.coral3], TileScale.Sixteen);
            case "level9":
            case "level9":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.builtin.brick,sprites.castle.shrub], TileScale.Sixteen);
            case "level10":
            case "level10":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.collectibleInsignia,sprites.dungeon.collectibleRedCrystal,sprites.dungeon.chestOpen], TileScale.Sixteen);
            case "level11":
            case "level11":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tileGrass2], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "myTile0":
            case "tile2":return tile2;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
